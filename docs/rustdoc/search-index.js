var N = null;var searchIndex = {};
searchIndex["raytracer_5607"]={"doc":"","items":[[0,"camera","raytracer_5607","A virtual camera",N,N],[3,"Camera","raytracer_5607::camera","A virtual camera",N,N],[12,"position","","",0,N],[12,"direction","","",0,N],[12,"up","","",0,N],[12,"right","","",0,N],[12,"vert_half_angle","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"default","","",0,[[],["self"]]],[11,"from_parameters","","",0,N],[0,"image","raytracer_5607","Represents a collection of pixels (an image)",N,N],[3,"Image","raytracer_5607::image","A struct representing a collection of pixels",N,N],[12,"width","","",1,N],[12,"height","","",1,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["image"]]],[11,"new","","",1,[[["usize"],["usize"]],["self"]]],[11,"from_file","","Load an image from a file, using the `image` crate",1,[[["str"]],["self"]]],[11,"with_background","","Add a background to an image (overwrites image)",1,[[["self"],["pixel"]],["image"]]],[11,"is_valid_coord","","Check to see if a coordinate is valid and inside an image",1,[[["self"],["usize"],["usize"]],["bool"]]],[11,"get_pixel","","",1,[[["self"],["usize"],["usize"]],["option",["pixel"]]]],[11,"get_pixel_mirrored","","",1,[[["self"],["f64"],["f64"]],["pixel"]]],[11,"get_pixels","","",1,[[["self"]],["vec",["pixel"]]]],[11,"set_pixel","","",1,[[["self"],["usize"],["usize"],["pixel"]]]],[11,"write","","Write the image to a file Supported formats: - PNG - JPG - BMP - GIF - ICO - TIFF - Webp - PNM (PPM)",1,[[["self"],["str"]],["result",["string"]]]],[11,"to_bytes","","",1,[[["self"]],["vec",["u8"]]]],[0,"intersection","raytracer_5607","Intersection record",N,N],[3,"Intersection","raytracer_5607::intersection","",N,N],[12,"surface_normal","","",2,N],[12,"point","","",2,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"default","","",2,[[],["intersection"]]],[11,"new","","",2,[[["vector3"],["vector3"]],["self"]]],[0,"lights","raytracer_5607","Various lights that can be represented in a ray tracer",N,N],[0,"directional_light","raytracer_5607::lights","Directional light. Simulates a star-like light.",N,N],[3,"DirectionalLight","raytracer_5607::lights::directional_light","",N,N],[12,"color","","",3,N],[12,"direction","","",3,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"new","","",3,[[["pixel"],["vector3"]],["self"]]],[11,"to_light","","",3,[[["self"],["intersection"]],["vector3"]]],[11,"diffuse","","",3,[[["self"],["intersection"],["material"]],["pixel"]]],[11,"specular","","",3,[[["self"],["camera"],["intersection"],["material"]],["pixel"]]],[0,"light","raytracer_5607::lights","A generic light.",N,N],[8,"Light","raytracer_5607::lights::light","",N,N],[10,"to_light","","Calculate the direction of the light from the intersection",4,[[["self"],["intersection"]],["vector3"]]],[10,"diffuse","","Calculate the diffuse component",4,[[["self"],["intersection"],["material"]],["pixel"]]],[10,"specular","","Calculate the specular component",4,[[["self"],["camera"],["intersection"],["material"]],["pixel"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[0,"point_light","raytracer_5607::lights","Point light. Radiates equally in all directions.",N,N],[3,"PointLight","raytracer_5607::lights::point_light","",N,N],[12,"color","","",5,N],[12,"position","","",5,N],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"new","","",5,[[["pixel"],["vector3"]],["self"]]],[11,"to_light","","",5,[[["self"],["intersection"]],["vector3"]]],[11,"diffuse","","",5,[[["self"],["intersection"],["material"]],["pixel"]]],[11,"specular","","",5,[[["self"],["camera"],["intersection"],["material"]],["pixel"]]],[0,"material","raytracer_5607","A material to apply to a ray-traced object",N,N],[3,"Material","raytracer_5607::material","Ray tracing material",N,N],[12,"ambient","","",6,N],[12,"diffuse","","",6,N],[12,"specular","","",6,N],[12,"phong_power","","",6,N],[12,"transmissive","","",6,N],[12,"ior","","",6,N],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",6,[[["self"]],["material"]]],[11,"default","","",6,[[],["self"]]],[11,"new","","",6,[[["pixel"],["pixel"],["pixel"],["f64"],["pixel"],["f64"]],["self"]]],[0,"pixel","raytracer_5607","Represents a pixel",N,N],[3,"RawPixel","raytracer_5607::pixel","Struct for representing pixels on a byte level (for image representation)",N,N],[12,"r","","",7,N],[12,"g","","",7,N],[12,"b","","",7,N],[12,"a","","",7,N],[3,"Pixel","","Holds all pixel information as a float",N,N],[12,"r","","",8,N],[12,"g","","",8,N],[12,"b","","",8,N],[12,"a","","",8,N],[12,"with_clamping","","",8,N],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["rawpixel"]]],[11,"from","","",7,[[["pixel"]],["rawpixel"]]],[11,"from","","",8,[[["rawpixel"]],["pixel"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["pixel"]]],[11,"from_slice_unclamped","","",8,N],[11,"from_pix_unclamped","","",8,[[["self"]],["self"]]],[11,"from_rgba_unclamped","","Construct a new pixel from R, G, B, A values, but don't clamp values",8,[[["f64"],["f64"],["f64"],["f64"]],["self"]]],[11,"from_rgba","","Construct a new pixel from R, G, B, A values",8,[[["f64"],["f64"],["f64"],["f64"]],["self"]]],[11,"from_rgb","","Construct a new pixel from R, G, B values",8,[[["f64"],["f64"],["f64"]],["self"]]],[11,"clamp","","Construct a new pixel with all values clamped, consuming self",8,[[["self"]],["self"]]],[11,"set_rgba","","Set RGBA components",8,[[["self"],["f64"],["f64"],["f64"],["f64"]]]],[11,"set_rgb","","Set RGB components",8,[[["self"],["f64"],["f64"],["f64"]]]],[11,"luminance","","Luminance of a pixel Luminance formula from Wikipedia",8,[[["self"]],["f64"]]],[11,"lerp","","Linearly interpolate with another pixel",8,[[["self"],["pixel"],["f64"]],["pixel"]]],[11,"quant","","Quantize the bits of this pixel into bins",8,[[["self"],["usize"]],["pixel"]]],[11,"from","","",8,N],[11,"add","","",8,[[["self"],["self"]],["self"]]],[11,"sub","","",8,[[["self"],["self"]],["self"]]],[11,"mul","","",8,[[["self"],["self"]],["self"]]],[11,"mul","","",8,[[["self"],["f64"]],["self"]]],[0,"ray","raytracer_5607","A half-line (a starting point and a direction)",N,N],[3,"Ray","raytracer_5607::ray","",N,N],[12,"start","","",9,N],[12,"direction","","",9,N],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"new","","",9,[[["vector3"],["vector3"]],["self"]]],[11,"eval","","",9,[[["self"],["f64"]],["vector3"]]],[0,"ray_tracer","raytracer_5607","The main ray tracing implementation",N,N],[3,"RayTracer","raytracer_5607::ray_tracer","",N,N],[11,"render","","",10,[[["self"],["scene"]],["image"]]],[0,"scene","raytracer_5607","A simple description of a scene used for ray tracing",N,N],[3,"Scene","raytracer_5607::scene","",N,N],[12,"camera","","The scene's camera",11,N],[12,"resolution","","The resolution of the output image",11,N],[12,"output_image","","The file path for the output image",11,N],[12,"background","","The background color",11,N],[12,"spheres","","All the spheres in the scene",11,N],[12,"ambient_light","","Ambient lighting in a scene",11,N],[12,"lights","","All other lights in the scene",11,N],[12,"max_depth","","The max depth of a ray",11,N],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"default","","",11,[[],["self"]]],[11,"from_file","","",11,[[["str"]],["self"]]],[0,"sphere","raytracer_5607","Representation of a sphere to be ray traced",N,N],[3,"Sphere","raytracer_5607::sphere","",N,N],[12,"radius","","",12,N],[12,"position","","",12,N],[12,"material","","",12,N],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"new","","",12,[[["f64"],["vector3"],["material"]],["self"]]],[11,"intersects","","",12,[[["self"],["ray"]],["option",["intersection"]]]],[0,"vector","raytracer_5607","A simple vector",N,N],[3,"Vector3","raytracer_5607::vector","3 dimensional vector",N,N],[12,"x","","",13,N],[12,"y","","",13,N],[12,"z","","",13,N],[17,"MAX_VECTOR3","","",N,N],[11,"default","","",13,[[],["vector3"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"eq","","",13,[[["self"],["vector3"]],["bool"]]],[11,"ne","","",13,[[["self"],["vector3"]],["bool"]]],[11,"clone","","",13,[[["self"]],["vector3"]]],[11,"from","","",13,N],[11,"mul","","",13,[[["self"],["f64"]],["self"]]],[11,"add","","",13,[[["self"],["vector3"]],["self"]]],[11,"sub","","",13,[[["self"],["vector3"]],["self"]]],[11,"neg","","",13,[[["self"]],["self"]]],[11,"new","","",13,[[["f64"],["f64"],["f64"]],["self"]]],[11,"cross","","",13,[[["self"],["vector3"]],["self"]]],[11,"dot","","",13,[[["self"],["vector3"]],["f64"]]],[11,"length","","",13,[[["self"]],["f64"]]],[11,"normalized","","",13,[[["self"]],["self"]]],[11,"reflect","","",13,[[["self"],["self"]],["self"]]]],"paths":[[3,"Camera"],[3,"Image"],[3,"Intersection"],[3,"DirectionalLight"],[8,"Light"],[3,"PointLight"],[3,"Material"],[3,"RawPixel"],[3,"Pixel"],[3,"Ray"],[3,"RayTracer"],[3,"Scene"],[3,"Sphere"],[3,"Vector3"]]};
initSearch(searchIndex);
